/*
 * PROTOSTRING
 * https://github.com/SethClydesdale/protostring
 * A library of methods that extend upon the JavaScript String Object
 */
String.prototype.encodeAs=function(t){t=t?t.toLowerCase():"decimal";var e,r=1,o=this.length,n=this.charCodeAt(0),i=" ",a="";switch(t){case"decimal":break;case"hex":e=16,n=n.toString(e);break;case"binary":e=2,n=n.toString(e);break;case"entity":r=0,n="",i="&#",a=";";break;default:throw new ReferenceError('"'+t+'" is not an encoding method\n@https://github.com/SethClydesdale/protostring/wiki/ProtoString-encodeAs%28%29-Method')}for(;o>r;r++)n+=i+this.charCodeAt(r).toString(e)+a;return n},String.prototype.decodeAs=function(t){if(t=t?t.toLowerCase():"decimal","entity"!=t){for(var e,r=this.split(" "),o=0,n="";e=r[o];o++){switch(t){case"decimal":break;case"hex":e=parseInt(e,16);break;case"binary":e="0b"+e;break;default:throw new ReferenceError('"'+t+'" is not a decoding method\n@https://github.com/SethClydesdale/protostring/wiki/ProtoString-decodeAs%28%29-Method')}n+=String.fromCharCode(e)}return n}return this.replace(/&#(\d+);/g,function(t,e){return String.fromCharCode(e)})},String.prototype.toEnclosed=function(){for(var t,e=0,r="";t=this[e];e++)t=t.charCodeAt(0),t>64&&91>t?t=9398+Math.abs(65-t):t>96&&123>t?t=9424+Math.abs(97-t):t>48&&58>t?t=9312+Math.abs(49-t):48==t&&(t=9450),r+=String.fromCharCode(t);return r},String.prototype.capitalize=function(t){return this[0].toUpperCase()+(t?this:this.toLowerCase()).slice(1)},String.prototype.toCamelCase=function(t){for(var e,r=0,o="",n=!1;e=this[r];r++)if(/[A-Z]/i.test(e))switch(n){case!1:o+=e;break;case!0:o+=e.toUpperCase(),n=!1}else/\s/.test(e)&&(n=!0);return o=(t?o[0].toUpperCase():o[0].toLowerCase())+o.slice(1)},String.prototype.toSentenceCase=function(){for(var t,e=0,r=!1,o="";t=this[e];e++)r||/\n|\r|\s/.test(t)?o+=t:(o+=t.toUpperCase(),r=!0),/\n|\r|\.|!|\?/.test(t)&&(r=!1);return o},String.prototype.toTitleCase=function(t){for(var e,r=1,o=this[0].toUpperCase(),n=!1;e=this[r];r++){switch(n){case!1:o+=e;break;case!0:o+=e.toUpperCase(),n=!1}/\s/.test(e)&&(n=!0)}return t?o:o.replace(/\s(a|about|above|across|against|along|also|although|among|an|and|around|at|because|before|behind|below|beneath|beside|between|beyond|but|by|down|during|either|except|for|from|in|inside|into|like|near|neither|nor|not|of|off|on|only|or|since|the|through|to|toward|under|unless|until|up|upon|while|with|within)(?=\s)/gi,function(t,e){return" "+e.toLowerCase()})},String.charRange=function(t,e,r){var o,n;switch(t=t?t.charCodeAt(0):0,e=e?e.charCodeAt(0)+1:65536,r=r?r.toLowerCase():"string",t>e&&(n=++t,t=--e,e=n),r){case"string":for(o="";e>t;t++)o+=String.fromCharCode(t);break;case"array":for(o=[],n=0;e>t;t++)o[n++]=String.fromCharCode(t);break;case"object":for(o={};e>t;t++)o["u"+t]=String.fromCharCode(t);break;default:throw new ReferenceError('"'+r+'" is not a supported data type\n@https://github.com/SethClydesdale/protostring/wiki/ProtoString-charRange%28%29-Method')}return o},String.prototype.distance=function(t,e){var r=e?this.toLowerCase():this,o=t?e?t.toLowerCase():t:r,e=0,n=r.length,i=o.length,a=Math.abs(n-i),s=0;if(r==o)return 0;for(n>i&&(n=i);n>e;e++)r[e]!=o[e]&&s++;return s+a},String.prototype.mirror=function(){for(var t=this.length-1,e="";t>-1;t--)e+=this[t];return e},String.prototype.protoRepeat=function(t,e){if(t=t?Math.floor(t):0,e=e?e:"",1/0==t||t*this.length>1<<28)throw new RangeError("Repeat count must be less than Infinity, and not exceed maximum string length\n@https://github.com/SethClydesdale/protostring/wiki/ProtoString-protoRepeat%28%29-Method");for(var r=1,o=this;t>r;r++)o+=e+this;return o},String.prototype.protoTrim=function(t){switch(t=t?t.toLowerCase():"both"){case"both":t=/^\s+|\s+$/g;break;case"left":t=/^\s+/;break;case"right":t=/\s+$/;break;default:throw new ReferenceError('"'+t+'" is not a trimming method\n@https://github.com/SethClydesdale/protostring/wiki/ProtoString-protoTrim%28%29-Method')}return this.replace(t,"")},String.prototype.cleanId=function(){for(var t,e=0,r="";t=this[e];e++)/\s/.test(t)?r+="-":/[0-9A-Z\-_]/i.test(t)&&(r+=t);return/[0-9\-_]/.test(r[0])&&(r="id-"+r),r},String.prototype.toNode=function(t){var e=document.createElement(t?t:"P");return e.innerHTML=this,e},String.prototype.toTextNode=function(){return document.createTextNode(this)};
